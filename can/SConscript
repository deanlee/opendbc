Import('env', 'envCython', 'cereal')

envDBC = env.Clone()
define_path = '-DDBC_FILE_PATH=\'"%s"\'' % (envDBC.Dir("..").abspath)
if isinstance(envDBC['CXXFLAGS'], list):
  envDBC['CXXFLAGS'] += [define_path]
else:
  envDBC['CXXFLAGS'] += ' ' + define_path
libdbc = envDBC.SharedLibrary('libdbc', source=["dbc.cc", "parser.cc", "packer.cc", "common.cc"], LIBS=["capnp", "kj"])

# Build packer and parser
lenv = envCython.Clone()
lenv["LINKFLAGS"] += [libdbc[0].get_labspath()]
parser = lenv.Program('parser_pyx.so', 'parser_pyx.pyx')
packer = lenv.Program('packer_pyx.so', 'packer_pyx.pyx')
dbc_parser = lenv.Program('dbc_pyx.so', 'dbc_pyx.pyx')

lenv.Depends(parser, libdbc)
lenv.Depends(packer, libdbc)
lenv.Depends(dbc_parser, libdbc)
